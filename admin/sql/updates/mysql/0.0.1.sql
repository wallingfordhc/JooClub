-- MySQL Script generated by MySQL Workbench
-- Wed May 24 22:48:38 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema clubman
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `clubman` ;

-- -----------------------------------------------------
-- Schema clubman
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `clubman` ;
USE `clubman` ;

-- -----------------------------------------------------
-- Table `clubman`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`person` ;

CREATE TABLE IF NOT EXISTS `clubman`.`person` (
  `personID` INT NOT NULL AUTO_INCREMENT,
  `memberID` INT NULL DEFAULT NULL,
  `firstname` VARCHAR(50) NULL DEFAULT NULL,
  `surname` VARCHAR(50) NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  `DOB` DATE NULL DEFAULT NULL,
  `phonenumber` VARCHAR(50) NULL DEFAULT NULL,
  `email` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`personID`));


-- -----------------------------------------------------
-- Table `clubman`.`group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`group` ;

CREATE TABLE IF NOT EXISTS `clubman`.`group` (
  `groupID` INT NOT NULL,
  `groupname` VARCHAR(256) NULL DEFAULT NULL,
  `grouplogo` VARCHAR(512) NULL DEFAULT NULL,
  `groupownerID` INT NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`groupID`));


-- -----------------------------------------------------
-- Table `clubman`.`match`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`match` ;

CREATE TABLE IF NOT EXISTS `clubman`.`match` (
  `matchID` INT NOT NULL AUTO_INCREMENT,
  `hometeamID` INT NULL DEFAULT NULL,
  `awayteamID` INT NULL DEFAULT NULL,
  `location` VARCHAR(50) NULL DEFAULT NULL,
  `latitude` MEDIUMTEXT NULL DEFAULT NULL,
  `longitude` MEDIUMTEXT NULL DEFAULT NULL,
  `postcode` VARCHAR(15) NULL DEFAULT NULL,
  `homescore` INT NULL DEFAULT NULL,
  `awayscore` INT NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `pushback` DATETIME NULL DEFAULT NULL,
  `meettime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`matchID`),
  INDEX `FK1_match` (`hometeamID` ASC),
  INDEX `FK2_match` (`awayteamID` ASC),
  CONSTRAINT `FK1_match`
    FOREIGN KEY (`hometeamID`)
    REFERENCES `clubman`.`group` (`groupID`),
  CONSTRAINT `FK2_match`
    FOREIGN KEY (`awayteamID`)
    REFERENCES `clubman`.`group` (`groupID`));


-- -----------------------------------------------------
-- Table `clubman`.`attendance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`attendance` ;

CREATE TABLE IF NOT EXISTS `clubman`.`attendance` (
  `attendanceID` INT NOT NULL AUTO_INCREMENT,
  `personID` INT NULL DEFAULT NULL,
  `eventID` INT NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  `role` VARCHAR(50) NULL DEFAULT NULL,
  `matchID` INT NULL DEFAULT NULL,
  PRIMARY KEY (`attendanceID`),
  INDEX `FK1_attendance` (`personID` ASC),
  INDEX `FK2_attendance` (`matchID` ASC),
  CONSTRAINT `FK1_attendance`
    FOREIGN KEY (`personID`)
    REFERENCES `clubman`.`person` (`personID`),
  CONSTRAINT `FK2_attendance`
    FOREIGN KEY (`matchID`)
    REFERENCES `clubman`.`match` (`matchID`));


-- -----------------------------------------------------
-- Table `clubman`.`grouproster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`grouproster` ;

CREATE TABLE IF NOT EXISTS `clubman`.`grouproster` (
  `rosterID` INT NOT NULL,
  `personID` INT NULL DEFAULT NULL,
  `groupID` INT NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`rosterID`),
  INDEX `FK1_grouproster` (`personID` ASC),
  INDEX `FK2_grouproster` (`groupID` ASC),
  CONSTRAINT `FK1_grouproster`
    FOREIGN KEY (`personID`)
    REFERENCES `clubman`.`person` (`personID`),
  CONSTRAINT `FK2_grouproster`
    FOREIGN KEY (`groupID`)
    REFERENCES `clubman`.`group` (`groupID`));


-- -----------------------------------------------------
-- Table `clubman`.`relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`relationship` ;

CREATE TABLE IF NOT EXISTS `clubman`.`relationship` (
  `relationshipID` INT NOT NULL,
  `person1ID` INT NULL DEFAULT NULL,
  `person2ID` INT NULL DEFAULT NULL,
  `relationshiptype` VARCHAR(50) NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`relationshipID`),
  INDEX `FK1_relationship` (`person1ID` ASC),
  INDEX `FK2_relationship` (`person2ID` ASC),
  CONSTRAINT `FK1_relationship`
    FOREIGN KEY (`person1ID`)
    REFERENCES `clubman`.`person` (`personID`),
  CONSTRAINT `FK2_relationship`
    FOREIGN KEY (`person2ID`)
    REFERENCES `clubman`.`person` (`personID`));


-- -----------------------------------------------------
-- Table `clubman`.`event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`event` ;

CREATE TABLE IF NOT EXISTS `clubman`.`event` (
  `eventID` INT NOT NULL AUTO_INCREMENT,
  `event_time` DATETIME NULL DEFAULT NULL,
  `actorID` INT NULL DEFAULT NULL,
  `eventtype` VARCHAR(50) NULL DEFAULT NULL,
  `source` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`eventID`));


-- -----------------------------------------------------
-- Table `clubman`.`consent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`consent` ;

CREATE TABLE IF NOT EXISTS `clubman`.`consent` (
  `consentID` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(50) NULL DEFAULT NULL,
  `consentforID` INT NULL DEFAULT NULL,
  `consentfromID` INT NULL DEFAULT NULL,
  `givendate` DATE NULL DEFAULT NULL,
  `expires` DATE NULL DEFAULT NULL,
  `comments` VARCHAR(2000) NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`consentID`));


-- -----------------------------------------------------
-- Table `clubman`.`certificates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clubman`.`certificates` ;

CREATE TABLE IF NOT EXISTS `clubman`.`certificates` (
  `certificateID` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(50) NULL DEFAULT NULL,
  `title` VARCHAR(200) NULL DEFAULT NULL,
  `awarded` DATE NULL DEFAULT NULL,
  `expires` DATE NULL DEFAULT NULL,
  `awardedby` INT NULL DEFAULT NULL,
  `awardedTo` INT NULL DEFAULT NULL,
  PRIMARY KEY (`certificateID`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
